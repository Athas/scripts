#!/bin/sh

# Manipulate `surf` via `sinmenu`-based interface.  You also need the
# `browserfield` script.
#
# This script does:
#
#   * stores history of: successful URI entries and certain smart prefix entries, e.g., "g foobar";
#   * direct bookmarks (same list as history)
#   * information debug, show all X properties on the `surf` window.
#   * smart prefixes e.g. `g` for Google search, `t` for TinyURL, etc.
#   * delete (with smart prefix `x`)
#   * history browsing, in conjunction with `surfsession`.
#
# Usage: `surfbrowse` _xid_ _action_
#
# _action_ must be one of `bookmark`, `go`, `info` or `history`
#
# To install, add the following to your `config.h`:
#
#     #define BROWSE(p) { .v = (char *[]){ "/bin/sh", "-c", "surfbrowse $1 $0", p, winid, NULL } }
#
# Then add some bindings to your keylist, for example the following:
#
#     { 0,                              GDK_g,      spawn,      BROWSE("go") },
#     { 0,                              GDK_b,      spawn,      BROWSE("bookmark") },
#     { GDK_SHIFT_MASK,                 GDK_i,      spawn,      BROWSE("info") },
#
# Based on a shell script by Peter John Hartman, pancake and nibble.

set -e # Die on error

surfcache=${XDG_CACHE_HOME:-~/.cache}/surf
history=$surfcache/history
visits=$surfcache/visits

xid=$1
p=$2

menu="browserfield -l 10 -b"

rawmenu="sinmenu -l 10 -b"

s_get_prop() { # xprop
    xprop -id $xid $1 | cut -d '"' -f 2
}

s_set_prop() { # xprop value
    [ -n "$2" ] && xprop -id $xid -f $1 8s -set $1 "$2"
}

s_write_f() { # file value
    [ -n "$2" ] && ((rm "$history" && awk '$0!=SEL' "SEL=$2" > "$history") < "$history"; echo "$2" >> $1)
}

case "$p" in
    info)
        xprop -id $xid | sed 's/\t/    /g' | $rawmenu -l 20
        ;;
    bookmark)
        uri=$(s_get_prop _SURF_URI)
        s_write_f $history "$uri"
        ;;
    del)
        sel=$(tac "$history" | $rawmenu -p 'delete:')
        [ "$sel" ] || exit 1
        (rm "$history" && awk '$0!=SEL' "SEL=$sel" > "$history") < "$history"
        ;;
    history)
        sel=$(tac $visits | $rawmenu -p 'uri from history:' | awk -F' - ' '{print $1}')
        s_set_prop _SURF_GO "$sel"
        ;;
    go)
        uri=$(browserfield < /dev/null)
        [ "$uri" ] || exit 1

        s_set_prop _SURF_GO "$uri"
        ;;
    *)
        echo Unknown xprop
        ;;
esac
